# alpha_beta_tictactoe.py
import math

def print_board(b):
    print()
    for i in range(3):
        print(" " + " | ".join(b[3*i:3*i+3]))
        if i < 2:
            print("---|---|---")
    print()

def check_winner(b, p):
    wins = [(0,1,2),(3,4,5),(6,7,8),(0,3,6),(1,4,7),(2,5,8),(0,4,8),(2,4,6)]
    return any(b[a]==b[b_]==b[c]==p for a,b_,c in wins)

def is_full(b):
    return all(s != " " for s in b)

def evaluate(b):
    if check_winner(b, "O"): return 1
    if check_winner(b, "X"): return -1
    return 0

def alphabeta(b, depth, alpha, beta, maximizing):
    score = evaluate(b)
    if score != 0 or is_full(b):
        return score
    if maximizing:
        max_eval = -math.inf
        for i in range(9):
            if b[i] == " ":
                b[i] = "O"
                val = alphabeta(b, depth+1, alpha, beta, False)
                b[i] = " "
                max_eval = max(max_eval, val)
                alpha = max(alpha, val)
                if beta <= alpha:
                    break
        return max_eval
    else:
        min_eval = math.inf
        for i in range(9):
            if b[i] == " ":
                b[i] = "X"
                val = alphabeta(b, depth+1, alpha, beta, True)
                b[i] = " "
                min_eval = min(min_eval, val)
                beta = min(beta, val)
                if beta <= alpha:
                    break
        return min_eval

def best_move(b):
    best_val = -math.inf
    move = None
    for i in range(9):
        if b[i] == " ":
            b[i] = "O"
            val = alphabeta(b, 0, -math.inf, math.inf, False)
            b[i] = " "
            if val > best_val:
                best_val = val
                move = i
    return move

def play():
    board = [" "]*9
    print("You = X, Computer = O")
    print_board(board)
    while True:
        # player
        try:
            m = int(input("Enter move (1-9): ")) - 1
            if m < 0 or m > 8 or board[m] != " ":
                print("Invalid move.")
                continue
        except ValueError:
            print("Enter number 1-9.")
            continue
        board[m] = "X"
        print_board(board)
        if check_winner(board, "X"):
            print("You win!")
            return
        if is_full(board):
            print("Draw!")
            return
        # computer
        print("Computer thinking...")
        cm = best_move(board)
        board[cm] = "O"
        print_board(board)
        if check_winner(board, "O"):
            print("Computer wins!")
            return
        if is_full(board):
            print("Draw!")
            return

if __name__ == "__main__":
    play()



OUTPUT:
You = X, Computer = O

   |   |   
---|---|---
   |   |   
---|---|---
   |   |   

Enter move (1-9): 1

 X |   |   
---|---|---
   |   |   
---|---|---
   |   |   

Computer thinking...

 X |   |   
---|---|---
   | O |   
---|---|---
   |   |   

Enter move (1-9): 9

 X |   |   
---|---|---
   | O |   
---|---|---
   |   | X 

Computer thinking...

 X |   |   
---|---|---
   | O |   
---|---|---
 O |   | X 

...
Computer wins!
